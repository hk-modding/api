<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <RootNamespace>Modding</RootNamespace>
        <AssemblyName>Assembly-CSharp.mm</AssemblyName>
        <TargetFramework>net472</TargetFramework>
        <AssemblyTitle>Hollow Knight - Mod API Enabled</AssemblyTitle>
        <Product>Modding API</Product>
        <Copyright>Copyright © 2017</Copyright>
        <OutputPath>bin\$(Configuration)\</OutputPath>
        <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
        <RestorePackagesPath>packages</RestorePackagesPath>
        <LangVersion>latest</LangVersion>
    </PropertyGroup>

    <ItemGroup>
        <Files Include="../Vanilla/*" />

        <BuildDir Include="$(TargetDir)" />
        
        <Dependencies Include="$(TargetDir)Newtonsoft.Json.dll" />
        <Dependencies Include="$(TargetDir)MMHOOK_Assembly-CSharp.dll" />
        <Dependencies Include="$(TargetDir)MMHOOK_PlayMaker.dll" />
        <Dependencies Include="$(TargetDir)MonoMod.Utils.dll" />
        <Dependencies Include="$(TargetDir)Mono.Cecil.dll" />
        <Dependencies Include="$(TargetDir)MonoMod.RuntimeDetour.dll" />
    </ItemGroup>

    <PropertyGroup>
        <OutputDir>../OutputFinal</OutputDir>
        <!-- todo macOS -->
        <GamePath Condition="'$(OS)' == 'Windows_NT'">C:/Program Files (x86)/Steam/steamapps/common/Hollow Knight</GamePath>
        <GamePath Condition="'$(OS)' != 'Windows_NT'">$(HOME)/.local/share/Steam/steamapps/common/Hollow Knight</GamePath>
        <CopyDir>$(GamePath)/hollow_knight_Data/Managed</CopyDir>
        
        <Mono Condition="$(OS) == WINDOWS_NT" />
        <Mono Condition="$(OS) != WINDOWS_NT">mono</Mono>
    </PropertyGroup>

    <Target Name="PostBuild" AfterTargets="PostBuildEvent">
        <Delete Condition="Exists('$(OutputDir)')" Files="$(OutputDir)" />

        <Copy SkipUnchangedFiles="true" SourceFiles="@(Files)" DestinationFolder="@(BuildDir)" />

        <Exec WorkingDirectory="@(BuildDir)" Command="$(Mono) &quot;$(MSBuildProjectDirectory)/../PrePatcher/Output/PrePatcher.exe&quot; Assembly-CSharp.dll Assembly-CSharp-patched.dll" />
        <Copy SkipUnchangedFiles="true" SourceFiles="$(TargetDir)Assembly-CSharp-patched.dll" DestinationFiles="$(TargetDir)Assembly-CSharp.dll" />

        <Delete Condition="Exists('MONOMODDED_Assembly-CSharp.dll')" Files="MONOMODDED_Assembly-CSharp.dll" />
        <Exec WorkingDirectory="@(BuildDir)" Command="$(Mono) MonoMod.exe Assembly-CSharp.dll" />

        <!-- Generate Hooks !-->
        <Exec Condition="!Exists('$(TargetDir)MMHOOK_Assembly-CSharp.dll')" WorkingDirectory="@(BuildDir)" Command="$(Mono) MonoMod.RuntimeDetour.HookGen.exe --private Assembly-CSharp.dll" />
        <Exec Condition="!Exists('$(TargetDir)MMHOOK_Playmaker.dll')" WorkingDirectory="@(BuildDir)" Command="$(Mono) MonoMod.RuntimeDetour.HookGen.exe --private PlayMaker.dll" />
    </Target>

    <Target Name="SetupExamples" AfterTargets="PostBuildEvent" Condition="'$(SetupExamples)' == 'true'">
        <RemoveDir Directories="../Examples/HollowKnightManaged/" />
        <MakeDir Directories="../Examples/HollowKnightManaged/" />
        <!-- Copy the vanilla files. -->
        <Copy SourceFiles="@(Files)" DestinationFolder="../Examples/HollowKnightManaged/" />
        <!-- Copy the API and the documentation -->
        <Copy SourceFiles="$(TargetDir)MONOMODDED_Assembly-CSharp.dll" DestinationFiles="../Examples/HollowKnightManaged/Assembly-CSharp.dll" />
        <Copy SourceFiles="$(TargetDir)Assembly-CSharp.mm.xml" DestinationFiles="../Examples/HollowKnightManaged/Assembly-CSharp.xml" />
        
        <!-- Copy the dependencies for the API and hooks for mods -->
        <Copy SourceFiles="@(Dependencies)" DestinationFolder="../Examples/HollowKnightManaged/" />
    </Target>
    
    <Target Name="OutputFinal" AfterTargets="PostBuild">
        <!-- Cleanup -->
        <RemoveDir Directories="$(OutputDir)/" />

        <!-- Make the output directory -->
        <MakeDir Directories="$(OutputDir)/" />

        <!-- Copy the API, the documentation, the overridden mscorlib, and the README. -->
        <Copy SourceFiles="../README.ModdingApi.md" DestinationFiles="$(OutputDir)/README.md" />
        <Copy SourceFiles="../override/mscorlib.dll" DestinationFiles="$(OutputDir)/mscorlib.dll" />
        <Copy SourceFiles="../override/mscorlib.xml" DestinationFiles="$(OutputDir)/mscorlib.xml" />
        <Copy SourceFiles="$(TargetDir)MONOMODDED_Assembly-CSharp.dll" DestinationFiles="$(OutputDir)/Assembly-CSharp.dll" />
        <Copy SourceFiles="$(TargetDir)Assembly-CSharp.mm.xml" DestinationFiles="$(OutputDir)/Assembly-CSharp.xml" />
        
        <!-- Copy the dependencies for the API and hooks for mods -->
        <Copy SourceFiles="@(Dependencies)" DestinationFolder="$(OutputDir)" />
        
        <PropertyGroup>
            <NativeLibPrefix Condition="'$(RuntimeIdentifier)' == 'win-x64'" />
            <NativeLibExtension Condition="'$(RuntimeIdentifier)' == 'win-x64'">.dll</NativeLibExtension>
            <NativeLibPrefix Condition=" '$(RuntimeIdentifier)' == 'linux-x64'">lib</NativeLibPrefix>
            <NativeLibExtension Condition=" '$(RuntimeIdentifier)' == 'linux-x64'">.so</NativeLibExtension>
            <NativeLibPrefix Condition=" '$(RuntimeIdentifier)' == 'osx-x64'">lib</NativeLibPrefix>
            <NativeLibExtension Condition=" '$(RuntimeIdentifier)' == 'osx-x64'">.dylib</NativeLibExtension>
        </PropertyGroup>

        <Warning Condition="'$(RuntimeIdentifier)' == ''" Text="Runtime identifier unknown, pass `--runtime win-x64` to include native dependencies" />
        <!-- on .NET 5 and up, msbuild can automatically copy the relevant files from /runtimes/$RID/native/library.{dll,so,dylib}. Unfortunately, we're on net472 -->
        <Copy Condition="'$(RuntimeIdentifier)' != ''" SourceFiles="$(Pkgunityscenerepacker)/runtimes/$(RuntimeIdentifier)/native/$(NativeLibPrefix)unityscenerepacker$(NativeLibExtension)" DestinationFolder="$(OutputDir)" />
    </Target>
    
    <Target Name="CopyOutputAfterFinal" AfterTargets="OutputFinal" Condition="'$(CopyDir)' != ''">
        <ItemGroup>
            <OutputFiles Include="$(OutputDir)\**\*" />
        </ItemGroup>
        <Copy SourceFiles="@(OutputFiles)" DestinationFolder="$(CopyDir)" />
    </Target>
    
    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
        <DebugType>full</DebugType>
        <DocumentationFile>bin\$(Configuration)\Assembly-CSharp.mm.xml</DocumentationFile>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
        <DebugType>pdbonly</DebugType>
        <DocumentationFile>bin\$(Configuration)\Assembly-CSharp.mm.xml</DocumentationFile>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="MonoMod" Version="21.4.29.1">
            <IncludeAssets>all</IncludeAssets>
        </PackageReference>

        <PackageReference Include="MonoMod.RuntimeDetour" Version="21.4.29.1">
            <IncludeAssets>all</IncludeAssets>
        </PackageReference>
        
        <PackageReference Include="MonoMod.RuntimeDetour.HookGen" Version="21.4.29.1">
            <IncludeAssets>all</IncludeAssets>
        </PackageReference>
        
        <PackageReference Include="unityscenerepacker" Version="0.0.2" GeneratePathProperty="true" />
    </ItemGroup>
    
    <ItemGroup>
        <ProjectReference Include="../PrePatcher/PrePatcher.csproj">
            <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
        </ProjectReference>
    </ItemGroup>
    
    <ItemGroup>
        <EmbeddedResource Include="logo.png"/>
    </ItemGroup>

    <ItemGroup>
        <Reference Include="Assembly-CSharp, Version=0.0.0.0, Culture=neutral, processorArchitecture=MSIL">
            <HintPath>../Vanilla/Assembly-CSharp.dll</HintPath>
            <SpecificVersion>False</SpecificVersion>
        </Reference>
        <Reference Include="mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <HintPath>..\override\mscorlib.dll</HintPath>
        </Reference>
        <Reference Include="netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51">
          <HintPath>../Vanilla/netstandard.dll</HintPath>
        </Reference>
        <Reference Include="Newtonsoft.Json, Version=11.0.0.0, Culture=neutral, PublicKeyToken=null">
          <HintPath>../JsonNet/Newtonsoft.Json.dll</HintPath>
        </Reference>
        <Reference Include="PlayMaker, Version=1.6.0.0, Culture=neutral, processorArchitecture=MSIL">
            <HintPath>../Vanilla/PlayMaker.dll</HintPath>
            <SpecificVersion>False</SpecificVersion>
        </Reference>
        <Reference Include="UnityEngine, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
            <HintPath>../Vanilla/UnityEngine.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.AnimationModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
            <HintPath>../Vanilla/UnityEngine.AnimationModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.AssetBundleModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
            <HintPath>../Vanilla/UnityEngine.AssetBundleModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.AudioModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
            <HintPath>../Vanilla/UnityEngine.AudioModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
            <HintPath>../Vanilla/UnityEngine.CoreModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.ImageConversionModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
            <HintPath>../Vanilla/UnityEngine.ImageConversionModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.IMGUIModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
            <HintPath>../Vanilla/UnityEngine.IMGUIModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.InputLegacyModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
          <HintPath>../Vanilla/UnityEngine.InputLegacyModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.JSONSerializeModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
            <HintPath>../Vanilla/UnityEngine.JSONSerializeModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.ParticleSystemModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
            <HintPath>../Vanilla/UnityEngine.ParticleSystemModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.Physics2DModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
            <HintPath>../Vanilla/UnityEngine.Physics2DModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.TextRenderingModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
            <HintPath>../Vanilla/UnityEngine.TextRenderingModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.UI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
            <HintPath>../Vanilla/UnityEngine.UI.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.UIModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
            <HintPath>../Vanilla/UnityEngine.UIModule.dll</HintPath>
        </Reference>
    </ItemGroup>
</Project>
